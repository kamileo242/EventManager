// <auto-generated />
using System;
using EventManager.Datalayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EventManager.Datalayer.Migrations
{
    [DbContext(typeof(EventManagerDbContext))]
    [Migration("20250225181351_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EventManager.Datalayer.Dbos.AddressDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("miasto");

                    b.Property<string>("EventsIds")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("wydarzenia");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("numer_domu");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ulica");

                    b.HasKey("Id");

                    b.ToTable("adres");
                });

            modelBuilder.Entity("EventManager.Datalayer.Dbos.EventDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_adresu");

                    b.Property<decimal>("Cost")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("koszt");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("opis");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_zakonczenia");

                    b.Property<int>("MaxParticipants")
                        .HasColumnType("int")
                        .HasColumnName("maksymalna_liczba_uczestnikow");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nazwa");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_rozpoczecia");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("wydarzenie");
                });

            modelBuilder.Entity("EventManager.Datalayer.Dbos.UserDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nazwisko");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("imie");

                    b.HasKey("Id");

                    b.ToTable("uzytkownik");
                });

            modelBuilder.Entity("EventManager.Datalayer.Dbos.UserEventDbo", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_uzytkownika");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id_wydarzenia");

                    b.Property<decimal>("DepositPaid")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("wplacona_kwota");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_dolaczenia");

                    b.HasKey("UserId", "EventId");

                    b.ToTable("uzytkownik_wydarzenie");
                });

            modelBuilder.Entity("EventManager.Datalayer.Dbos.EventDbo", b =>
                {
                    b.HasOne("EventManager.Datalayer.Dbos.AddressDbo", null)
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
